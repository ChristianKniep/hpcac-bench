---
- name: ensure slurm rpms and dependencies are present
  when: not is_container is defined
  yum: pkg={{ item }} state=present
  tags: 
  - slurm
  - rpm
  with_items:
     - slurm

- name: create slurm group
  tags:
  - user
  - slurm
  action: group name=slurm gid=5000 system=no

- name: create slurm user
  tags:
  - user
  - slurm
  action: user name=slurm group=slurm shell=/bin/false uid=5000 createhome=no home=/opt/slurm

- name: create a slurm config dir
  tags: slurm
  file: path=/etc/slurm/ mode=0755 state=directory

- name: create slurm dirs
  tags: slurm
  file: path=/var/{{ item }}/slurm/ owner=slurm mode=0755 state=directory
  with_items:
    - lib
    - log
    - run

- name: create slurm directories
  tags: slurm
  file: path=/var/spool/slurmd owner=slurm mode=0755 state=directory

- name: restart munged service
  tags: 
  - slurm
  supervisorctl: name=munged state=restarted

- name: install mariadb for slurm accounting
  when: is_master is defined
  yum: pkg={{ item }} state=present
  tags: 
  - slurm
  with_items:
     - mariadb-server

- name: Start the MySQL service
  when: is_master is defined
  tags: 
  - slurm
  action: service name=mariadb state=started

- name: Configure the initial root credentials (fails if already set)
  when: is_master is defined
  tags: 
  - slurm
  action: command mysqladmin -u root password {{ mysql_root_password }} 
  ignore_errors: yes

- name: Set up slurmDBD database
  when: is_master is defined
  tags: 
  - slurm
  command: mysql -u root -pmysql -e "create database slurm_acct_db;"
  ignore_errors: yes

- name: Grant permissions to slurmDBD database
  when: is_master is defined
  tags: 
  - slurm
  action: command mysql -u root -p{{ mysql_root_password }} -D slurm_acct_db -e \
                        "grant all on slurm_acct_db.* TO '{{ slurmdbd_user }}'@'localhost' identified by '{{ slurmdbd_pw }}' with grant option;"

- name: configure slurmdbd
  when: is_master is defined 
  action: template src=usr/local/etc/slurmdbd.conf.j2 dest=/usr/local/etc/slurmdbd.conf owner=root group=root mode=0644
  tags: 
  - slurm
  notify: 
  - restart slurmdbd
  
## Slurm.conf

- name: configure slurm (master)
  when: is_master is defined 
  action: template src=usr/local/etc/{{ slurm_conf_template }} dest=/usr/local/etc/slurm.conf owner=root group=root mode=0644
  tags: 
  - slurm
  - cfg
  notify: 
  - restart slurmctld
  - restart slurmd

- name: create slurm directories
  tags: slurm
  file: path=/var/spool/slurmd owner=slurm mode=0755 state=directory

- name: configure slurmd
  action: template src=usr/local/etc/{{ slurm_conf_template }} dest=/usr/local/etc/slurm.conf owner=root group=root mode=0644
  when: not is_master is defined  and not is_container
  tags: 
  - slurm
  - cfg
  notify: restart slurmd

- name: LD_LIBRARY_PATH to find libmunge
  tags:
    - env
  lineinfile:
    dest=/etc/bashrc
    line="export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/local/lib/"
    regexp=".*export LD_LIBRARY_PATH="
    owner=root
    state=present
    insertafter=EOF
    create=True

- name: start slurmdbd service
  tags: 
  - slurm
  supervisorctl: name=slurmdbd state=started 
  
## setup sacct
- name: Check for the sacct clusters
  tags:
    - slurm
  when: is_master is defined
  command: sacctmgr list cluster
  register: sacct_mgr_lst_cluster

- name: sacctmgr add cluster
  tags:
  - slurm
  when: is_master is defined and sacct_mgr_lst_cluster.stdout.find("{{ slurm_cluster }}") == -1
  command: sacctmgr -i add cluster {{ slurm_cluster }}

- name: Check for the sacct accounts
  tags:
    - sacct
    - slurm
  when: is_master is defined
  command: sacctmgr list account
  register: sacct_mgr_lst_acct

- name: sacctmgr add account
  tags:
  - slurm
  when: is_master is defined and sacct_mgr_lst_acct.stdout.find("{{ slurm_acct }}") == -1
  command: sacctmgr -i add account {{ slurm_acct }}

- name: Check for the sacct users
  tags:
    - slurm
  when: is_master is defined
  command: sacctmgr list users
  register: sacct_mgr_lst_user

- name: sacctmgr add user
  tags:
  - slurm
  when: is_master is defined and sacct_mgr_lst_user.stdout.find("{{ slurm_user }}") == -1
  command: sacctmgr -i add user {{ slurm_user }} DefaultAccount={{ slurm_acct }}
  
- name: sacctmgr set maxjobs
  tags:
  - sacct
  - slurm
  command: sacctmgr -i modify user where name={{ slurm_user }} \
                     cluster={{ slurm_cluster }} set maxjobs={{ slurm_maxjobs }}

- name: start slurmctld service
  tags: 
  - slurm
  supervisorctl: name=slurmctld state=started 

- name: start slurmd service
  tags: 
  - slurm
  supervisorctl: name=slurmd state=started
